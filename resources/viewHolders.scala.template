package %s

import android.app.Activity
import android.view.{LayoutInflater, View, ViewGroup}
import android.widget._

trait TypedViewHolder[T <: View] {
  val rootViewId: Int
  val rootView: T
}

trait TypedViewHolderFactory[T <: TypedLayout[_]] {
  type V <: View
  type VH <: TypedViewHolder[V]
  def create(view: V): VH
}

object TypedViewHolderFactory {
%s
}

object TypedViewHolder {
  def setContentView[T <: View]
  (activity: Activity, layout: TypedLayout[T])
  (implicit ev: TypedViewHolderFactory[layout.type]): ev.VH = {
    val contentView = activity.getWindow.getDecorView.findViewById(
      android.R.id.content).asInstanceOf[ViewGroup]
    val holder = inflate(activity.getLayoutInflater, layout, contentView, false)
    activity.setContentView(holder.rootView, holder.rootView.getLayoutParams)
    holder.asInstanceOf[ev.VH] // harmless cast, appease intellij
  }

  def inflate[T <: View]
  (inflater: LayoutInflater, layout: TypedLayout[T], parent: ViewGroup, attach: Boolean)
  (implicit ev: TypedViewHolderFactory[layout.type]): ev.VH = {
    ev.create(inflater.inflate(layout.id, parent, attach).asInstanceOf[ev.V])
  }
%s
}

